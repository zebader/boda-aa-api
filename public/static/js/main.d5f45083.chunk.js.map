{"version":3,"sources":["pages/admin/components/CreateUser.js","pages/admin/components/AdminHome.js","pages/user/components/UserHome.js","services/auth-service.js","lib/AuthProvider.js","pages/login/components/Login.js","components/PrivateAdminRoute.js","components/PrivateUserRoute.js","components/AnonRoute.js","App.js","index.js"],"names":["CreateUser","AdminHome","UserHome","auth","this","axios","create","baseURL","process","withCredentials","user","username","password","userType","post","then","data","response","get","React","createContext","Consumer","Provider","withAuth","Comp","authStore","login","signup","logout","isLoggedin","isAdminAccount","props","Component","AuthProvider","state","isLoading","setState","catch","me","value","children","useState","setOnChangeName","setOnChangePass","className","onSubmit","event","preventDefault","autoComplete","name","id","type","placeholder","onChange","e","target","component","rest","render","to","App","path","Login","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d5f45083.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function CreateUser() {\n  return (\n    <div>\n      <h1>CreateUser</h1>\n    </div>\n  )\n}","import React from 'react'\n\nexport default function AdminHome() {\n  return (\n    <div>\n      <h1>AdminHome</h1>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function UserHome() {\n  return (\n    <div>\n      <h1>UserHome</h1>\n    </div>\n  )\n}","import axios from \"axios\";\n\nclass Auth {\n  constructor() {\n    this.auth = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true\n    });\n  }\n\n  createUser(user) {\n    const { username, password, userType } = user;\n    return this.auth\n      .post(\"/auth/create-user\", { username, password, userType })\n      .then(({ data }) => data);\n  }\n\n  login(user) {\n    const { username, password } = user;\n    return this.auth\n      .post(\"/auth/login\", { username, password })\n      .then(({ data }) => data);\n  }\n\n  logout() {\n    return this.auth.post(\"/auth/logout\", {}).then(response => response.data);\n  }\n\n  me() {\n    return this.auth.get(\"/auth/me\").then(response => response.data);\n  }\n}\n\nconst auth = new Auth();\n\nexport default auth;\n","import React, { Component } from \"react\";\nimport auth from \"../services/auth-service\";\nconst { Consumer, Provider } = React.createContext();\n\nexport { Consumer };\n\nexport const withAuth = Comp => {\n  return class WithAuth extends Component {\n    render() {\n      return (\n        <Consumer>\n          {authStore => {\n            return (\n              <Comp\n                login={authStore.login}\n                signup={authStore.signup}\n                user={authStore.user}\n                logout={authStore.logout}\n                isLoggedin={authStore.isLoggedin}\n                isAdminAccount={authStore.isAdminAccount}\n                {...this.props}\n              />\n            );\n          }}\n        </Consumer>\n      );\n    }\n  };\n};\n\nclass AuthProvider extends Component {\n  state = {\n    isLoggedin: false,\n    isAdminAccount: false,\n    user: null,\n    isLoading: true\n  };\n\n  componentDidMount() {\n    auth\n      .me()\n      .then(user => {\n        if(user.userType === 'admin') {\n          this.setState({\n          isLoggedin: true,\n          user,\n          isLoading: false,\n          isAdminAccount: true,\n          })\n        } else {\n          this.setState({\n            isLoggedin: true,\n            user,\n            isLoading: false\n          });\n        }\n      })\n      .catch(() => {\n        this.setState({\n          isLoggedin: false,\n          user: null,\n          isLoading: false\n        });\n      });\n  }\n\n  login = user => {\n    const { username, password } = user;\n    auth\n      .login({ username, password })\n      .then(user => {\n        if(user.userType === 'admin') {\n          this.setState({\n            isLoggedin: true,\n            user,\n            isAdminAccount: true,\n          });\n        } else {\n          this.setState({\n            isLoggedin: true,\n            user\n          });\n        }\n      })\n      .catch(() => {});\n  };\n\n  logout = () => {\n    auth\n      .logout()\n      .then(() => {\n        this.setState({\n          isLoggedin: false,\n          user: null,\n          isAdminAccount: false,\n        });\n      })\n      .catch(() => {});\n  };\n  render() {\n    const { isLoading, isLoggedin, user, isAdminAccount } = this.state;\n    return isLoading ? (\n      <div>Loading</div>\n    ) : (\n      <Provider\n        value={{\n          isLoggedin,\n          isAdminAccount,\n          user,\n          login: this.login,\n          logout: this.logout,\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nexport default AuthProvider;\n","import React, { useState } from 'react';\nimport { withAuth } from \"../../../lib/AuthProvider\";\n\nconst Login = props => {\n  const [username, setOnChangeName] = useState('')\n  const [password, setOnChangePass] = useState('')\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault()\n    const user = { username: username, password:password,}\n    props.login(user);\n  }\n\n  return (\n    <article className='hero-search'>\n      <form onSubmit={handleFormSubmit} autoComplete='off'>\n        <input\n          name='username'\n          id='username'\n          type='text'\n          value={username}\n          placeholder='username'\n          onChange={(e) => setOnChangeName(e.target.value)} />\n        <input\n          name='password'\n          id='password'\n          type='password'\n          value={password}\n          placeholder='password'\n          onChange={(e) => setOnChangePass(e.target.value)} />\n\n        <button type='submit'\n        >Submit</button>\n      </form>\n\n    </article>\n  )\n}\n\nexport default withAuth(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/AuthProvider\";\n\nfunction PrivateAdminRoute({ component: Component, isLoggedin,isAdminAccount, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        { if(!isLoggedin) {\n          return (<Redirect to=\"/login\"/>)\n        } else if (isLoggedin && isAdminAccount) {\n          return (<Component {...props} />)\n        } else {\n          return (<Redirect to=\"/home\"/>)\n        }\n      }}\n    />\n  );\n}\n\nexport default withAuth(PrivateAdminRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/AuthProvider\";\n\nfunction PrivateUserRoute({ component: Component, isLoggedin,isAdminAccount, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        { if(!isLoggedin) {\n          return (<Redirect to=\"/login\"/>)\n        } else if (isLoggedin && !isAdminAccount) {\n          return (<Component {...props} />)\n        } else {\n          return (<Redirect to=\"/admin\"/>)\n        }\n      }}\n    />\n  );\n}\n\nexport default withAuth(PrivateUserRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withAuth } from \"../lib/AuthProvider\";\n\nfunction AnonRoute({ component: Component, isLoggedin, isAdminAccount, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if(!isLoggedin) {\n          return (<Component {...props}/>)\n        } else if (isLoggedin && isAdminAccount) {\n          return (<Redirect to=\"/admin\"/>)\n        } else {\n          return (<Redirect to=\"/home\"/>)\n        }\n      }\n      }\n    />\n  );\n}\n\nexport default withAuth(AnonRoute);\n","import React, { Component } from \"react\";\nimport { Switch } from \"react-router-dom\";\n\nimport CreateUser from \"./pages/admin/components/CreateUser\";\nimport AdminHome from \"./pages/admin/components/AdminHome\";\nimport UserHome from \"./pages/user/components/UserHome\";\nimport Login from \"./pages/login/components/Login\";\n\nimport PrivateAdminRoute from \"./components/PrivateAdminRoute\";\nimport PrivateUserRoute from \"./components/PrivateUserRoute\";\n\nimport AnonRoute from \"./components/AnonRoute\";\nimport AuthProvider from \"./lib/AuthProvider\";\n\nclass App extends Component {\n  render() {\n    return (\n      <AuthProvider>\n          <Switch>\n            <AnonRoute path=\"/\" component={Login} exact/>     \n            <AnonRoute path=\"/login\" component={Login} exact/>\n            <PrivateAdminRoute path=\"/admin\" component={AdminHome} exact/>\n            <PrivateAdminRoute path=\"/create-user\" component={CreateUser} exact/>\n            <PrivateUserRoute path=\"/home\" component={UserHome} exact/>\n          </Switch>\n      </AuthProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n/* import * as serviceWorker from './serviceWorker'; */\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n/* serviceWorker.unregister(); */\n"],"sourceRoot":""}